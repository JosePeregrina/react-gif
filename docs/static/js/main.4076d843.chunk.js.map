{"version":3,"sources":["Components/AddCategory.js","helpers/getGifts.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setInputvalue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMA2BeA,MAxBf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACFC,mBAAS,IADP,mBAC/BC,EAD+B,KACnBC,EADmB,KAiBtC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,GAAcA,EAAWK,OAAOC,OAAS,IAC3CR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAA+BO,OAC7CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBhB,SAACP,GAAO,IACxBM,EAAUN,EAAEQ,OAAZF,MACRR,EAAcQ,S,+BCRLG,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,gDAEuBC,UAAWH,GAFlC,8DAGFI,MAAMF,GAHJ,cAGdG,EAHc,gBAIGA,EAAIC,OAJP,uBAIZC,EAJY,EAIZA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATlB,kBAYbM,GAZa,4CAAH,sDCWNO,MATf,YAAsC,IAAfH,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAC5B,OACE,sBAAKc,UAAU,uDAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCiBKO,MAnBf,YAAgC,IAAbnB,EAAY,EAAZA,SAAY,ECDF,SAACA,GAAc,IAAD,EACfd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAUzC,OAJAC,qBAAU,WACRxB,EAASC,GAAUwB,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SACjE,CAACpB,IAEGqB,EDPyBK,CAAe1B,GAAlCa,EAFgB,EAEtBN,KAAca,EAFQ,EAERA,QAErB,OACE,qCACE,6BAAKpB,IAEHoB,GAAW,2CAEb,qBAAKJ,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEKjBgB,MAlBf,WAAyB,IAAD,EACczC,mBAAS,CAAC,gBADxB,mBACfQ,EADe,KACHT,EADG,KAGtB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGS,EAAWe,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCRxB4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4076d843.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AddCategory({ setCategories }) {\n  const [inputvalue, setInputvalue] = useState('');\n\n  const handleInputChange = (e) => {\n    const { value } = e.target;\n    setInputvalue(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputvalue && inputvalue.trim().length > 2) {\n      setCategories((categories) => [inputvalue,...categories,]);\n      setInputvalue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' value={inputvalue} onChange={handleInputChange} />\n    </form>\n  );\n}\n\nexport default AddCategory;\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifts = async ( category ) => {\n    const url =\n      `http://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=6&api_key=8O7qSSCXsFZ18g881Y54sOe5Hb7jCuxT`;\n    const res = await fetch(url);\n    const { data } = await res.json();\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n    return gifs;\n  };","import React from 'react';\n\nfunction GifGridItem({ title, url }) {\n  return (\n    <div className='card animate__animated animate__fadeIn animate__slow'>\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n\nexport default GifGridItem;\n","import React from 'react';\nimport { useFetchGifts } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nfunction GifGrid({ category }) {\n\n  const {data: images, loading} = useFetchGifts( category );\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {\n        loading && <p>Loading...</p>\n      }\n      <div className='card-grid'>\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default GifGrid;\n","import { useEffect, useState } from 'react';\nimport { getGifts } from '../helpers/getGifts';\n\nexport const useFetchGifts = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifts(category).then((imgs) => setState({ data: imgs, loading: false }));\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport AddCategory from './Components/AddCategory';\nimport GifGrid from './Components/GifGrid';\nfunction GifExpertApp() {\n  const [categories, setCategories] = useState(['Dragon Ball']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}